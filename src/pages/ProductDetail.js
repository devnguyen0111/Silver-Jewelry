import React, { useState, useEffect } from "react";
import { useParams, Link, useNavigate } from "react-router-dom";
import { products } from "../data/products";
import "./ProductDetail.css";

const ProductDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const [product, setProduct] = useState(null);
  const [selectedImage, setSelectedImage] = useState(0);
  const [quantity, setQuantity] = useState(1);
  const [activeTab, setActiveTab] = useState("description");

  useEffect(() => {
    const foundProduct = products.find((p) => p.id === parseInt(id));
    if (foundProduct) {
      setProduct(foundProduct);
      setSelectedImage(0);
    } else {
      navigate("/products");
    }
  }, [id, navigate]);

  if (!product) {
    return <div className="loading">ƒêang t·∫£i...</div>;
  }

  const formatPrice = (price) => {
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    }).format(price);
  };

  const getDiscountPercentage = (originalPrice, currentPrice) => {
    return Math.round(((originalPrice - currentPrice) / originalPrice) * 100);
  };

  const handleQuantityChange = (change) => {
    const newQuantity = quantity + change;
    if (newQuantity >= 1 && newQuantity <= 10) {
      setQuantity(newQuantity);
    }
  };

  const handleAddToCart = () => {
    // Logic th√™m v√†o gi·ªè h√†ng s·∫Ω ƒë∆∞·ª£c implement sau
    alert(`ƒê√£ th√™m ${quantity} s·∫£n ph·∫©m "${product.name}" v√†o gi·ªè h√†ng!`);
  };

  const handleBuyNow = () => {
    // Logic mua ngay s·∫Ω ƒë∆∞·ª£c implement sau
    alert(
      `Chuy·ªÉn ƒë·∫øn trang thanh to√°n cho ${quantity} s·∫£n ph·∫©m "${product.name}"!`
    );
  };

  return (
    <div className="product-detail-page">
      <div className="container">
        {/* Breadcrumb */}
        <nav className="breadcrumb">
          <Link to="/">Trang ch·ªß</Link>
          <span> / </span>
          <Link to="/products">S·∫£n ph·∫©m</Link>
          <span> / </span>
          <span>{product.name}</span>
        </nav>

        <div className="product-detail-content">
          {/* Product Images */}
          <div className="product-images">
            <div className="main-image">
              <img src={product.images[selectedImage]} alt={product.name} />
              {product.originalPrice > product.price && (
                <div className="discount-badge">
                  -{getDiscountPercentage(product.originalPrice, product.price)}
                  %
                </div>
              )}
            </div>

            <div className="image-thumbnails">
              {product.images.map((image, index) => (
                <button
                  key={index}
                  className={`thumbnail ${
                    selectedImage === index ? "active" : ""
                  }`}
                  onClick={() => setSelectedImage(index)}
                >
                  <img src={image} alt={`${product.name} ${index + 1}`} />
                </button>
              ))}
            </div>
          </div>

          {/* Product Info */}
          <div className="product-info">
            <div className="product-category">{product.category}</div>

            <h1 className="product-name">{product.name}</h1>

            <div className="product-rating">
              <div className="stars">
                {[...Array(5)].map((_, i) => (
                  <span
                    key={i}
                    className={`star ${
                      i < Math.floor(product.rating) ? "filled" : ""
                    }`}
                  >
                    ‚òÖ
                  </span>
                ))}
              </div>
              <span className="rating-text">
                {product.rating} ({product.reviews} ƒë√°nh gi√°)
              </span>
            </div>

            <div className="product-price">
              <span className="current-price">
                {formatPrice(product.price)}
              </span>
              {product.originalPrice > product.price && (
                <span className="original-price">
                  {formatPrice(product.originalPrice)}
                </span>
              )}
            </div>

            <div className="product-status">
              {product.inStock ? (
                <span className="in-stock">‚úÖ C√≤n h√†ng</span>
              ) : (
                <span className="out-of-stock">‚ùå H·∫øt h√†ng</span>
              )}
            </div>

            <div className="product-description">
              <p>{product.description}</p>
            </div>

            <div className="quantity-selector">
              <label>S·ªë l∆∞·ª£ng:</label>
              <div className="quantity-controls">
                <button
                  onClick={() => handleQuantityChange(-1)}
                  disabled={quantity <= 1}
                >
                  -
                </button>
                <span>{quantity}</span>
                <button
                  onClick={() => handleQuantityChange(1)}
                  disabled={quantity >= 10}
                >
                  +
                </button>
              </div>
            </div>

            <div className="product-actions">
              <button
                className="btn btn-primary"
                onClick={handleAddToCart}
                disabled={!product.inStock}
              >
                üõí Th√™m v√†o gi·ªè h√†ng
              </button>
              <button
                className="btn btn-secondary"
                onClick={handleBuyNow}
                disabled={!product.inStock}
              >
                Mua ngay
              </button>
              <button className="btn btn-outline">Y√™u th√≠ch</button>
            </div>

            <div className="product-features">
              <h3>ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t</h3>
              <ul>
                {product.features.map((feature, index) => (
                  <li key={index}>
                    <span className="feature-icon">‚ú®</span>
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </div>

        {/* Product Details Tabs */}
        <div className="product-tabs">
          <div className="tab-headers">
            <button
              className={`tab-header ${
                activeTab === "description" ? "active" : ""
              }`}
              onClick={() => setActiveTab("description")}
            >
              M√¥ t·∫£ s·∫£n ph·∫©m
            </button>
            <button
              className={`tab-header ${
                activeTab === "features" ? "active" : ""
              }`}
              onClick={() => setActiveTab("features")}
            >
              Th√¥ng s·ªë k·ªπ thu·∫≠t
            </button>
            <button
              className={`tab-header ${
                activeTab === "reviews" ? "active" : ""
              }`}
              onClick={() => setActiveTab("reviews")}
            >
              ƒê√°nh gi√° ({product.reviews})
            </button>
          </div>

          <div className="tab-content">
            {activeTab === "description" && (
              <div className="tab-panel">
                <h3>Chi ti·∫øt s·∫£n ph·∫©m</h3>
                <p>{product.description}</p>
                <p>
                  S·∫£n ph·∫©m ƒë∆∞·ª£c ch·∫ø t√°c t·ª´ b·∫°c cao c·∫•p v·ªõi quy tr√¨nh ki·ªÉm ƒë·ªãnh
                  nghi√™m ng·∫∑t. M·ªói m√≥n trang s·ª©c ƒë·ªÅu ƒë∆∞·ª£c chƒÉm s√≥c t·ªâ m·ªâ ƒë·ªÉ ƒë·∫£m
                  b·∫£o ch·∫•t l∆∞·ª£ng t·ªët nh·∫•t cho kh√°ch h√†ng.
                </p>
                <p>
                  Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng s·∫£n ph·∫©m trang s·ª©c b·∫°c ƒë·∫πp
                  nh·∫•t, ch·∫•t l∆∞·ª£ng cao nh·∫•t v·ªõi gi√° c·∫£ h·ª£p l√Ω nh·∫•t th·ªã tr∆∞·ªùng.
                </p>
              </div>
            )}

            {activeTab === "features" && (
              <div className="tab-panel">
                <h3>Th√¥ng s·ªë k·ªπ thu·∫≠t</h3>
                <div className="features-table">
                  {product.features.map((feature, index) => (
                    <div key={index} className="feature-row">
                      <span className="feature-label">
                        {feature.split(":")[0]}:
                      </span>
                      <span className="feature-value">
                        {feature.split(":")[1] || feature}
                      </span>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === "reviews" && (
              <div className="tab-panel">
                <h3>ƒê√°nh gi√° kh√°ch h√†ng</h3>
                <div className="reviews-summary">
                  <div className="rating-overview">
                    <div className="rating-score">
                      <span className="score">{product.rating}</span>
                      <div className="stars">
                        {[...Array(5)].map((_, i) => (
                          <span
                            key={i}
                            className={`star ${
                              i < Math.floor(product.rating) ? "filled" : ""
                            }`}
                          >
                            ‚òÖ
                          </span>
                        ))}
                      </div>
                    </div>
                    <p>D·ª±a tr√™n {product.reviews} ƒë√°nh gi√°</p>
                  </div>
                </div>

                <div className="sample-reviews">
                  <div className="review-item">
                    <div className="reviewer-info">
                      <span className="reviewer-name">Nguy·ªÖn Th·ªã A</span>
                      <div className="review-rating">
                        {[...Array(5)].map((_, i) => (
                          <span key={i} className="star filled">
                            ‚òÖ
                          </span>
                        ))}
                      </div>
                    </div>
                    <p className="review-text">
                      "S·∫£n ph·∫©m r·∫•t ƒë·∫πp, ch·∫•t l∆∞·ª£ng t·ªët. T√¥i r·∫•t h√†i l√≤ng v·ªõi
                      m√≥n trang s·ª©c n√†y!"
                    </p>
                    <span className="review-date">2 ng√†y tr∆∞·ªõc</span>
                  </div>

                  <div className="review-item">
                    <div className="reviewer-info">
                      <span className="reviewer-name">Tr·∫ßn VƒÉn B</span>
                      <div className="review-rating">
                        {[...Array(4)].map((_, i) => (
                          <span key={i} className="star filled">
                            ‚òÖ
                          </span>
                        ))}
                        <span className="star">‚òÖ</span>
                      </div>
                    </div>
                    <p className="review-text">
                      "Thi·∫øt k·∫ø ƒë·∫πp, gi√° c·∫£ h·ª£p l√Ω. S·∫Ω mua th√™m s·∫£n ph·∫©m kh√°c."
                    </p>
                    <span className="review-date">1 tu·∫ßn tr∆∞·ªõc</span>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* Related Products */}
        <div className="related-products">
          <h2>S·∫£n ph·∫©m li√™n quan</h2>
          <div className="related-grid">
            {products
              .filter(
                (p) => p.id !== product.id && p.category === product.category
              )
              .slice(0, 3)
              .map((relatedProduct) => (
                <Link
                  key={relatedProduct.id}
                  to={`/product/${relatedProduct.id}`}
                  className="related-product"
                >
                  <img src={relatedProduct.image} alt={relatedProduct.name} />
                  <h3>{relatedProduct.name}</h3>
                  <p className="price">{formatPrice(relatedProduct.price)}</p>
                </Link>
              ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductDetail;
